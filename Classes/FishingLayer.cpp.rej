diff a/Classes/FishingLayer.cpp b/Classes/FishingLayer.cpp	(rejected hunks)
@@ -22,21 +22,24 @@
 #define SOUND_FIRE        "Audio/sound_fire.mp3"
 #endif // CC_PLATFOR_ANDROID
 
-
 bool FishingLayer::init(){
+    
 	musicTurnOff=true;
 	Layer::init();
 	_bullet=NULL;
     
+    //Set tag of the layer, and get it in pause layer
+    setTag(101);
+	
 	//Add background picture
 	auto background = Sprite::create("CocoStudioRes/background.jpg");
 	background->setAnchorPoint(Point(0,0));
 	background->setPosition(Point(0,0));
-	background->setTag(101);
+	background->setTag(102);
 	addChild(background,0);
 	
 	//Read the resources of CocoStudio json file, and add it to the scene
-	widget = dynamic_cast<Layout*>(cocostudio::GUIReader::getInstance()->widgetFromJsonFile("CocoStudioRes/FishJoyMini_2.json"));
+	widget = dynamic_cast<Layout*>(cocostudio::GUIReader::getInstance()->widgetFromJsonFile("CocoStudioRes/FishJoyMini_1.json"));
 	addChild(widget,2);
     
 	//Read the texture to sprite frame cache
@@ -124,15 +127,11 @@
 		auto netFish=SpriteBatchNode::create("GameScene/bullet10-hd.png",5);
 		//addChild(netFish,1);
 		
-		//CCSprite *sprite = CCSprite::createWithTexture(mgr->getTexture(), CCRectMake(0, 0, 31, 30));
-		 net=Sprite::createWithTexture(netFish->getTexture(),CCRectMake(0,0,80,80));
-		 net1=Sprite::createWithTexture(netFish->getTexture(),CCRectMake(0,0,80,80));
-		 net2=Sprite::createWithTexture(netFish->getTexture(),CCRectMake(0,0,80,80));
-		 net3=Sprite::createWithTexture(netFish->getTexture(),CCRectMake(0,0,80,80));
-// 		 addChild(net,1);
-// 		 addChild(net1,1);
-// 		 addChild(net2,1);
-// 		 addChild(net3,1);
+        net=Sprite::createWithTexture(netFish->getTexture(),Rect(0,0,80,80));
+        net1=Sprite::createWithTexture(netFish->getTexture(),Rect(0,0,80,80));
+        net2=Sprite::createWithTexture(netFish->getTexture(),Rect(0,0,80,80));
+        net3=Sprite::createWithTexture(netFish->getTexture(),Rect(0,0,80,80));
+        
         net1->setRotation(90.0f);
         net2->setRotation(180.0f);
         net3->setRotation(270.0f);
@@ -154,7 +153,6 @@
 		_bullet->setRotation(cannon->getRotation());
 		_bullet->setPosition(Point(cannon->getPosition().x-shifting, cannon->getPosition().y+20));
         
-
 		auto scale0=ScaleTo::create(0.5,0.3);
 		auto scale1=ScaleTo::create(0.5,0.1);
 		auto scale2=ScaleTo::create(0.5,0.35);
@@ -180,12 +178,9 @@
 		net2->setAnchorPoint(Point(0, 0));
 		net3->setAnchorPoint(Point(0, 0));
 		
-		
 		//Shoot the bullet and release after the action ended
 		_bullet->runAction(Sequence::create(MoveTo::create(1, endPosition),
 											CallFunc::create(CC_CALLBACK_0(FishingLayer::bulletRelease,this)),
-											/*MoveTo::create(1,endPosition),scale0,scale1,scale2,scale3,scale4,*/
-											/*CallFunc::create(CC_CALLBACK_0(FishingLayer::bulletRelease,this)),*/
 											NULL));
 		addChild(_bullet,1);
 		net->runAction(Sequence::create(scale0,scale1,scale2,scale3,scale4,NULL));
@@ -193,8 +188,6 @@
 		net2->runAction(Sequence::create(scale000,scale001,scale002,scale003,scale004,NULL));
 		net3->runAction(Sequence::create(scale0000,scale0001,scale0002,scale0003,scale0004,NULL));
 		
-		
-		
 		//Play bullet shoot music effect
 		CocosDenshion::SimpleAudioEngine::getInstance()->playEffect(SOUND_FIRE);
 	}
@@ -216,12 +209,9 @@
 	addChild(net1,1);
 	addChild(net2,1);
 	addChild(net3,1);
-
-	
-	
 }
-void FishingLayer::netRelease()
-{
+
+void FishingLayer::netRelease(){
     
 	if (net!=NULL)
 	{
@@ -229,7 +219,7 @@
 		net=NULL;
 	}
 }
-//���½���ͣ��ť����ʵ�ֵĺ���
+
 void FishingLayer::pauseEvent(Widget* target, TouchEventType type){
     
 	if(type == TouchEventType::TOUCH_EVENT_ENDED){
@@ -237,24 +227,19 @@
 		//Get the windows size of fishlayer
 		auto winSize = Director::getInstance()->getWinSize();
         
-		
-	
 		//Pause all the actions and animations
-		Director::getInstance()->pause();//��ܹؼ�
+        this->onExit();
         
 		//Get the background ant change it to the pause texture
-		auto background = (Sprite*)getChildByTag(101);//������ǿ��ת��
-		background->setTexture("GameScene/bgblur01_01-hd.png");//ģ��ͼƬ
+		auto background = (Sprite*)getChildByTag(102);
+		background->setTexture("GameScene/bgblur01_01-hd.png");
 		background->setScaleX(winSize.width/background->getContentSize().width);
 		background->setScaleY(winSize.height/background->getContentSize().height);
-		background->setZOrder(2);//���� ����::create();�������ı���������������ʽ
-		//���ﲻ���ټ�addChild����Ϊ�ڱ�cpp�ļ��е�init�����ж�background�Ѿ�addChild���ˣ�
-		//�����ظ���background  SpriteͼƬ��ֻ�� ������ͼ���ѣ�һ���������ͼ��һ��ģ��ͼ��
-	
+		background->setZOrder(2);
         
 		//Create the pause layer
 		auto pauseLayer = FishingPauseLayer::create();
-		addChild(pauseLayer,3);
+		this->getParent()->addChild(pauseLayer,3);
 	}
 }
 
@@ -262,52 +247,13 @@
 {
     //CocosDenshion::SimpleAudioEngine::getInstance()->stopBackgroundMusic("Audio/music_1.mp3");
     CocosDenshion::SimpleAudioEngine::getInstance()->pauseBackgroundMusic();
-		/*backMusicOff  *turnOff=new backMusicOff();*/
-// 		if (musicTurnOff==true)
-// 		{
-// 			//turnOff->selected();
-// 			CocosDenshion::SimpleAudioEngine::getInstance()->pauseBackgroundMusic();
-// 			//CocosDenshion::SimpleAudioEngine::getInstance()->stopBackgroundMusic( "Audio/music_1.mp3");
-// 
-// 			musicTurnOff=false;
-// 		} 
-// 		else
-// 		{
-// 			//turnOff->unselected();
-// 			CocosDenshion::SimpleAudioEngine::getInstance()->resumeBackgroundMusic();
-// 			//CocosDenshion::SimpleAudioEngine::getInstance()->playBackgroundMusic( "Audio/music_1.mp3", true);
-// 
-// 			musicTurnOff=true;
-// 		}
-		
-		
-
 }
-void FishingLayer::turnOnMusic(Widget* target,TouchEventType type)
-{
-	//CocosDenshion::SimpleAudioEngine::getInstance()->stopBackgroundMusic("Audio/music_1.mp3");
-	CocosDenshion::SimpleAudioEngine::getInstance()->resumeBackgroundMusic();
-	/*backMusicOff  *turnOff=new backMusicOff();*/
-// 	if (musicTurnOff==true)
-// 	{
-// 		//turnOff->selected();
-// 		CocosDenshion::SimpleAudioEngine::getInstance()->pauseBackgroundMusic();
-// 		//CocosDenshion::SimpleAudioEngine::getInstance()->stopBackgroundMusic( "Audio/music_1.mp3");
-// 
-// 		musicTurnOff=false;
-// 	} 
-// 	else
-// 	{
-// 		//turnOff->unselected();
-// 		CocosDenshion::SimpleAudioEngine::getInstance()->resumeBackgroundMusic();
-// 		//CocosDenshion::SimpleAudioEngine::getInstance()->playBackgroundMusic( "Audio/music_1.mp3", true);
-// 
-// 		musicTurnOff=true;
-// 	}
-
 
+void FishingLayer::turnOnMusic(Widget* target,TouchEventType type){
     
+	CocosDenshion::SimpleAudioEngine::getInstance()->resumeBackgroundMusic();
 }
+
 void FishingLayer::setCannonRotation(Widget* target, Point targetPos){
 	
 	//Calulatethe rotation of cannon
@@ -361,22 +307,19 @@
 			//If the bullet collide the fish
 			if (_bullet->getBoundingBox().intersectsRect(dynamic_cast<FishActor*>(*it_self)->getBoundingBox())) {
                 
-				
-
-				net->setPosition(ccp(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
-				net1->setPosition(ccp(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
-				net2->setPosition(ccp(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
-				net3->setPosition(ccp(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
+				net->setPosition(Point(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
+				net1->setPosition(Point(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
+				net2->setPosition(Point(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
+				net3->setPosition(Point(dynamic_cast<FishActor*>(*it_self)->getPositionX(),dynamic_cast<FishActor*>(*it_self)->getPositionY()));
 				addChild(net,1);
 				addChild(net1,1);
 				addChild(net2,1);
 				addChild(net3,1);
+                
 				//Release the bullet
 				_bullet->removeFromParent();
 				_bullet=NULL;
 				
-
-				
 				//Set the score
 				score+=dynamic_cast<FishActor*>(*it_self)->getFishScore();
 				char temp[64];
@@ -445,8 +388,6 @@
 	fishActor->removeAllChildrenWithCleanup(true);
 	fishActor->removeFromParent();
 	
-	
-	
 	//Play music effect when catch a fish
 	CocosDenshion::SimpleAudioEngine::getInstance()->playEffect(SOUND_COIN);
 }
@@ -510,25 +451,3 @@
 		fish->setRotation(rotation*180.0f/3.14f+180.0f);
 	}
 }
\ No newline at end of file
-
-backMusicOff::backMusicOff()
-{
-}
-
-backMusicOff::~backMusicOff()
-{
-}
-bool backMusicOff:: init()
-{
-	return true;
-}
-void backMusicOff:: selected() 
-{
-	/*MenuItemToggle::selected();*/
-	CocosDenshion::SimpleAudioEngine::getInstance()->pauseBackgroundMusic();
-}
-void backMusicOff:: unselected()
-{
-	/*MenuItemToggle::unselected();*/
-	CocosDenshion::SimpleAudioEngine::getInstance()->resumeBackgroundMusic();
-}
\ No newline at end of file
